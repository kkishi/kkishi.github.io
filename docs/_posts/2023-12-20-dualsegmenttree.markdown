---
layout: post
title:  "双対セグ木"
---

[Random Update Query](https://atcoder.jp/contests/abc332/tasks/abc332_f)をきっかけに双対セグ木の実装をようやく正しく理解した。具体的には、自分の実装は演算が可換であることを仮定していたのを、正しい適用順序を用いることで非可換な演算についても対応できるようにした。

正しい適用順序を用いるためには、作用素をあるノードに適用する際に、そのノードの祖先ノードの作用素が全て（子にEagerに伝搬することで）空になっている状態を保たないといけない。最終的なコード量は多くないが正しく実装するのはなかなか難しい。結局遅延セグ木を実装するのと同程度の理解が必要になる。また、素朴な実装と比べて実行速度が2~3倍ほど遅くなる。

細かい点として、作用素を伝搬させる順序は親から子に向かう必要があるが、これは1-based indexだと任意の距離の親を`index >> distance`として得られるために実装がしやすい。

実装については以下の記事を参考にした。
* <https://maspypy.com/segment-tree-%e3%81%ae%e3%81%8a%e5%8b%89%e5%bc%b72>
* <https://smijake3.hatenablog.com/entry/2018/11/03/100133>

双対セグ木と遅延セグ木の間の関係については以下の記事を参考にした。
* <https://kmyk.github.io/blog/blog/2019/02/22/dual-segment-tree/>

